---
- name: 0) 웹서버 구축 - 변수 테스트
  hosts: webserver
  vars:
    web_pkg: httpd
    firewall_pkg: firewalld
    python_pkg: python3-PyMySQL
    web_service: httpd
    firewall_service: firewalld
    open_service: http
  tasks:
    ##############################
    # Play 01 - 웹 서버 구축
    # 1) 패키지 설치
    # 2) 서비스 설정
    # 3) 서비스 기동
    # 4) 방화벽에 등록
    # Play 02 - 웹 요청 확인
    ##############################
    # 1) 패키지 설치
    - name: 1) 패키지 설치 - {{ web_pkg }}, {{ firewall_pkg }}, {{ python_pkg }}
      ansible.builtin.dnf:
        name: 
          - "{{ web_pkg }}"
          - "{{ firewall_pkg }}"
          - "{{ python_pkg }}"
        state: present

    # 2) 서비스 설정
    # * /var/www/html/index.html
    - name: 2) 웹 서버 설정 - /var/www/html/index.html
      ansible.builtin.copy:
        content: "My Web Server Test Page\n"
        dest: /var/www/html/index.html
        mode: '0644'

    # 3) 서비스 기동
    # * httpd
    # * firewalld
    - name: 3) 서비스 기동 - {{ web_service }}
      ansible.builtin.systemd:
        name: "{{ web_service }}"
        enabled: true
        state: started

    - name: 3) 서비스 기동 - {{ firewall_service }}
      ansible.builtin.systemd:
        name: "{{ firewall_service }}"
        enabled: true
        state: started

    # 4) 방화벽에 등록
    # * http
    - name: 4) 방화벽에 등록
      ansible.posix.firewalld:
        service: "{{ open_service }}"
        permanent: true
        immediate: true
        state: enabled 

- name: 1) 웹 확인
  hosts: localhost
  become: false
  tasks:
    - name: 웹 요청
      ansible.builtin.uri:
        url: http://192.168.10.11
        status_code: 200
      register: web_results
    
    - name: 웹 요청 확인           # - debug: var=web_results.msg
      ansible.builtin.debug: 
        var: web_results.msg
